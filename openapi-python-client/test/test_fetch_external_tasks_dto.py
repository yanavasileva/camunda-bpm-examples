# coding: utf-8

"""
    Camunda BPM REST API

    OpenApi Spec for Camunda BPM REST API.  # noqa: E501

    The version of the OpenAPI document: 7.13.0
    Generated by: https://openapi-generator.tech
"""


from __future__ import absolute_import

import unittest
import datetime

import openapi_client
from openapi_client.models.fetch_external_tasks_dto import FetchExternalTasksDto  # noqa: E501
from openapi_client.rest import ApiException

class TestFetchExternalTasksDto(unittest.TestCase):
    """FetchExternalTasksDto unit test stubs"""

    def setUp(self):
        pass

    def tearDown(self):
        pass

    def make_instance(self, include_optional):
        """Test FetchExternalTasksDto
            include_option is a boolean, when False only required
            params are included, when True both required and
            optional params are included """
        # model = openapi_client.models.fetch_external_tasks_dto.FetchExternalTasksDto()  # noqa: E501
        if include_optional :
            return FetchExternalTasksDto(
                worker_id = '0', 
                max_tasks = 56, 
                use_priority = True, 
                async_response_timeout = 56, 
                topics = [
                    openapi_client.models.fetch_external_task_topic_dto.FetchExternalTaskTopicDto(
                        topic_name = '0', 
                        lock_duration = 56, 
                        variables = [
                            '0'
                            ], 
                        local_variables = True, 
                        business_key = '0', 
                        process_definition_id = '0', 
                        process_definition_id_in = [
                            '0'
                            ], 
                        process_definition_key = '0', 
                        process_definition_key_in = [
                            '0'
                            ], 
                        process_definition_version_tag = '0', 
                        without_tenant_id = True, 
                        tenant_id_in = [
                            '0'
                            ], 
                        process_variables = { }, 
                        deserialize_values = True, )
                    ]
            )
        else :
            return FetchExternalTasksDto(
                worker_id = '0',
                max_tasks = 56,
        )

    def testFetchExternalTasksDto(self):
        """Test FetchExternalTasksDto"""
        inst_req_only = self.make_instance(include_optional=False)
        inst_req_and_optional = self.make_instance(include_optional=True)


if __name__ == '__main__':
    unittest.main()
