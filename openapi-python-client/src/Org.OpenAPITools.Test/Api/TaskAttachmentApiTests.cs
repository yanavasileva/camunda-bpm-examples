/* 
 * Camunda BPM REST API
 *
 * OpenApi Spec for Camunda BPM REST API.
 *
 * The version of the OpenAPI document: 7.13.0
 * 
 * Generated by: https://github.com/openapitools/openapi-generator.git
 */

using System;
using System.IO;
using System.Collections.Generic;
using System.Collections.ObjectModel;
using System.Linq;
using System.Reflection;
using RestSharp;
using NUnit.Framework;

using Org.OpenAPITools.Client;
using Org.OpenAPITools.Api;
using Org.OpenAPITools.Model;

namespace Org.OpenAPITools.Test
{
    /// <summary>
    ///  Class for testing TaskAttachmentApi
    /// </summary>
    /// <remarks>
    /// This file is automatically generated by OpenAPI Generator (https://openapi-generator.tech).
    /// Please update the test case below to test the API endpoint.
    /// </remarks>
    public class TaskAttachmentApiTests
    {
        private TaskAttachmentApi instance;

        /// <summary>
        /// Setup before each unit test
        /// </summary>
        [SetUp]
        public void Init()
        {
            instance = new TaskAttachmentApi();
        }

        /// <summary>
        /// Clean up after each unit test
        /// </summary>
        [TearDown]
        public void Cleanup()
        {

        }

        /// <summary>
        /// Test an instance of TaskAttachmentApi
        /// </summary>
        [Test]
        public void InstanceTest()
        {
            // TODO uncomment below to test 'IsInstanceOf' TaskAttachmentApi
            //Assert.IsInstanceOf(typeof(TaskAttachmentApi), instance);
        }

        
        /// <summary>
        /// Test AddAttachment
        /// </summary>
        [Test]
        public void AddAttachmentTest()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //string id = null;
            //string attachmentName = null;
            //string attachmentDescription = null;
            //string attachmentType = null;
            //string url = null;
            //System.IO.Stream content = null;
            //var response = instance.AddAttachment(id, attachmentName, attachmentDescription, attachmentType, url, content);
            //Assert.IsInstanceOf(typeof(AttachmentDto), response, "response is AttachmentDto");
        }
        
        /// <summary>
        /// Test DeleteAttachment
        /// </summary>
        [Test]
        public void DeleteAttachmentTest()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //string id = null;
            //string attachmentId = null;
            //instance.DeleteAttachment(id, attachmentId);
            
        }
        
        /// <summary>
        /// Test GetAttachment
        /// </summary>
        [Test]
        public void GetAttachmentTest()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //string id = null;
            //string attachmentId = null;
            //var response = instance.GetAttachment(id, attachmentId);
            //Assert.IsInstanceOf(typeof(AttachmentDto), response, "response is AttachmentDto");
        }
        
        /// <summary>
        /// Test GetAttachmentData
        /// </summary>
        [Test]
        public void GetAttachmentDataTest()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //string id = null;
            //string attachmentId = null;
            //var response = instance.GetAttachmentData(id, attachmentId);
            //Assert.IsInstanceOf(typeof(System.IO.Stream), response, "response is System.IO.Stream");
        }
        
        /// <summary>
        /// Test GetAttachments
        /// </summary>
        [Test]
        public void GetAttachmentsTest()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //string id = null;
            //var response = instance.GetAttachments(id);
            //Assert.IsInstanceOf(typeof(List<AttachmentDto>), response, "response is List<AttachmentDto>");
        }
        
    }

}
